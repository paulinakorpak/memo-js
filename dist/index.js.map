{
  "version": 3,
  "sources": ["../../build/dist/Board/helper/shuffle.js", "../../build/dist/Board/template.js", "../../build/dist/Board/cards/fruits.js", "../../build/dist/Card/template.js", "../../build/dist/Card/index.js", "../../build/dist/Timer/template.js", "../../build/dist/Timer/index.js", "../../build/dist/Counter/template.js", "../../build/dist/Counter/index.js", "../../build/dist/Board/index.js", "../../build/dist/Game/index.js", "../../build/dist/index.js"],
  "sourcesContent": ["export const shuffle = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array;\n};\n", "export const template = (rows, cols) => {\n  let html = '';\n\n  for (let i = 0; i < rows; i++) {\n    html = `${html} <tr class=\"row\">`;\n\n    for (let j = 0; j < cols; j++) {\n      const key = i * cols + j;\n      html = `${html} <td class=\"col\" data-key=\"${key}\"></td>`;\n    }\n\n    html = `${html} </tr>`;\n  }\n\n  return html;\n};\n", "export const fruits = [\n  'apple',\n  'cherry',\n  'coco',\n  'fig',\n  'gooseberry',\n  'grapefruit',\n  'grapes',\n  'kiwi',\n  'lemon',\n  'peach',\n  'pear',\n  'pineapple',\n  'plum',\n  'pomagranate',\n  'watermelon',\n];\n", "export const template = (visibility, type) => `\n  <img\n    src=\"img/cards/${type}.png\"\n    alt=\"${type}\"\n    ${!visibility ? 'class=\"d-none\"' : ''}\n  />`;\n", "import { template } from './template.js';\n\nexport const Card = (element, type) => {\n  const state = {\n    visibility: false,\n  };\n\n  const init = () => {\n    render();\n  };\n\n  const render = () => element.innerHTML = template(state.visibility, type);\n\n  const show = () => {\n    state.visibility = true;\n    render();\n  };\n\n  const hide = () => {\n    state.visibility = false;\n    render();\n  };\n\n  const getType = () => type;\n\n  const isVisible = () => state.visibility;\n\n  return {\n    init, show, hide, getType, isVisible,\n  };\n};\n", "export const template = (minutes, seconds) => {\n  const format = (value) => (value > 9 ? value : `0${value}`);\n\n  return `\n    <div>\n      Timer: ${format(minutes)}:${format(seconds)}\n    </div>\n  `;\n};\n", "import { template } from './template.js';\n\nexport const Timer = (element) => {\n  const state = {\n    time: 0,\n  };\n\n  let interval;\n\n  const init = () => {\n    render(0, 0);\n    start();\n  };\n\n  const render = (minutes, seconds) => {\n    element.innerHTML = template(minutes, seconds);\n  };\n\n  const start = () => {\n    interval = setInterval(\n      () => {\n        state.time++;\n\n        const seconds = state.time % 60;\n        const minutes = Math.floor(state.time / 60);\n\n        render(minutes, seconds);\n      },\n      1000,\n    );\n  };\n\n  const stop = () => {\n    clearInterval(interval);\n  };\n\n  return { init, stop };\n};\n", "export const template = (count) => `\n    <div>\n      Counter: ${count}\n    </div>\n  `;\n", "import { template } from './template.js';\n\nexport const Counter = (element) => {\n  const state = {\n    count: 0,\n  };\n\n  const init = () => {\n    render();\n  };\n\n  const render = () => {\n    element.innerHTML = template(state.count);\n  };\n\n  const increment = () => {\n    state.count++;\n    render();\n  };\n\n  return { init, increment };\n};\n", "import { shuffle } from './helper/shuffle.js';\nimport { template } from './template.js';\nimport { fruits } from './cards/fruits.js';\nimport { Card } from '../Card/index.js';\nimport { Timer } from '../Timer/index.js';\nimport { Counter } from '../Counter/index.js';\n\nexport const Board = (element, showResult) => {\n  const state = {\n    firstCard: null,\n    secondCard: null,\n  };\n\n  let cards = [];\n  let timer = null;\n  let counter = null;\n\n  const init = (rows, cols) => {\n    const timerElement = element.querySelector('.timer');\n    timer = Timer(timerElement);\n    timer.init();\n\n    const counterElement = element.querySelector('.counter');\n    counter = Counter(counterElement);\n    counter.init();\n\n    renderBoard(rows, cols);\n    cards = initCards(shuffleCardTypes());\n  };\n\n  const shuffleCardTypes = () => shuffle([...fruits, ...fruits]);\n\n  const renderBoard = (rows, cols) => {\n    const table = element.querySelector('table');\n    table.innerHTML = template(rows, cols);\n  };\n\n  const initCards = (types) => {\n    const fields = Array.from(element.querySelectorAll('td'));\n\n    cards = fields.map((field, index) => {\n      const card = Card(field, types[index], index);\n      card.init();\n\n      field.addEventListener('click', handlePlay);\n\n      return card;\n    });\n\n    return cards;\n  };\n\n  const handlePlay = async (e) => {\n    const { key } = e.currentTarget.dataset;\n    const selectedCard = cards[key];\n\n    const cardAlreadyVisible = selectedCard.isVisible();\n    const twoCardsVisible = state.firstCard !== null && state.secondCard !== null;\n\n    if (cardAlreadyVisible || twoCardsVisible) {\n      return;\n    }\n\n    selectedCard.show();\n    counter.increment();\n    isCompleted();\n\n    if (state.firstCard === null) {\n      state.firstCard = selectedCard;\n    } else {\n      state.secondCard = selectedCard;\n\n      if (state.firstCard.getType() !== state.secondCard.getType()) {\n        await (new Promise((resolve) => setTimeout(resolve, 1000)));\n        state.firstCard.hide();\n        state.secondCard.hide();\n      }\n\n      state.firstCard = null;\n      state.secondCard = null;\n    }\n  };\n\n  const isCompleted = () => {\n    let allVisible = true;\n\n    cards.map((card) => allVisible = allVisible && card.isVisible());\n\n    if (allVisible) {\n      timer.stop();\n      showResult();\n    }\n  };\n\n  return { init };\n};\n", "import { Board } from '../Board/index.js';\n\nexport const Game = (element) => {\n  const init = (rows, cols) => {\n    const boardElement = element.querySelector('.board');\n    Board(boardElement, showResult).init(rows, cols);\n  };\n\n  const showResult = () => {\n    const resultElement = element.querySelector('.result');\n    const table = element.querySelector('.table');\n\n    table.classList.add('d-none');\n    resultElement.classList.remove('d-none');\n  };\n  return { init };\n};\n", "import { Game } from './Game/index.js';\n\nconst rows = 6;\nconst cols = 5;\n\nconst appElement = document.querySelector('.app');\nGame(appElement).init(rows, cols);\n"],
  "mappings": "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",
  "names": []
}
